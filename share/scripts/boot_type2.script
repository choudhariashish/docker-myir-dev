# This is a boot script for U-Boot
# Generate boot.scr:
# mkimage -c none -A arm -T script -d boot.script boot.scr
#
# Generate boot.script (for modifications in boot.scr):
# dd if=boot.scr of=boot.script bs=72 skip=1
#
################

setenv ipaddr 192.168.1.5
setenv serverip 192.168.1.30
setenv netmask 255.255.255.0
setenv ethaddr ab:bc:cd:de:ef:fa

setenv m4_boot_addr 0x7E0000
setenv m4_boot_temp_addr 0x48000000
setenv m4_image m4.bin
saveenv

echo "----------------------------------------------------"
echo "Booting MCU Firmware=>"
fatload mmc 1:1 ${m4_boot_temp_addr} ${m4_image}
cp.b ${m4_boot_temp_addr} ${m4_boot_addr} 0x20000
bootaux ${m4_boot_addr}

P1_IMAGE=/p1/fitimage.fit
P1_IMAGE_COUNT=0
setexpr P1_IMAGE_COUNT 0

P2_IMAGE=/p2/fitimage.fit
P2_IMAGE_COUNT=0
setexpr P2_IMAGE_COUNT 0

P2_RETRY_FILE=/p2/retry-count
P2_RETRY_COUNT=0

# We are repurposing "jh_clk" for keeping a track of P2 retries.
setenv P2_RETRY_COUNT ${jh_clk}

LOAD_ADDR=0x60000000


echo "----------------------------------------------------"
echo "--------------Pluto Boot Selection------------------"
echo "----------------------------------------------------"
mmc part


echo "----------------------------------------------------"
echo "P1 Images=>"

if test -e mmc 1:1 ${P1_IMAGE}; then
    echo "Found image      : ${P1_IMAGE}"
    setexpr P1_IMAGE_COUNT ${P1_IMAGE_COUNT} + 1
fi

echo "----------------------------------------------------"
echo "P2 Images=>"

if test -e mmc 1:1 ${P2_IMAGE}; then
    echo "Found image      : ${P2_IMAGE}"
    setexpr P2_IMAGE_COUNT ${P2_IMAGE_COUNT} + 1
fi

echo "----------------------------------------------------"
echo "Image Selection=>"

echo "P1_IMAGE_COUNT => ${P1_IMAGE_COUNT}"
echo "P2_IMAGE_COUNT => ${P2_IMAGE_COUNT}"

setenv bootargs 'root=/dev/mmcblk1p3 rw'
if test ${P2_IMAGE_COUNT} = 1; then
    echo "Found image for P2"

    # We are unsuccessful 3 times to boot an image on P2.
    # Hence revert to the image in P1.
    if test ${P2_RETRY_COUNT} = 3; then
        echo "Retry count 3, reverting back to P1 partition..."
        fatrm mmc 1:1 ${P2_IMAGE}

        setenv jh_clk 0
        saveenv
        reset
    fi


    # We are successful to boot an image on P2.
    # Hence continue booting it.
    if test -e mmc 1:1 /p2/boot_ok; then
        echo "Found boot_ok, loading P2..."

        fatload mmc 1:1 ${LOAD_ADDR} ${P2_IMAGE};

        setenv jh_clk 0
        saveenv

        # We expect an image on P2 to put this "boot_ok" back.
        # This is an indication that P2 is been successfully booting.
        fatrm mmc 1:1 /p2/boot_ok
        bootm ${LOAD_ADDR}
    else

        # We will give P2 3 chances to try booting.
        # Update the persistent count and boot the P2 image.

        echo "Retry count ${P2_RETRY_COUNT}, loading P2..."

        fatload mmc 1:1 ${LOAD_ADDR} ${P2_IMAGE};

        setexpr jh_clk ${jh_clk} + 1
        saveenv
        bootm ${LOAD_ADDR}
    fi
fi

setenv bootargs 'root=/dev/mmcblk1p2 rw'
if test ${P1_IMAGE_COUNT} = 1; then
    echo "Found image for P1"
    echo "Loading P1..."

    setenv jh_clk 0
    saveenv

    fatload mmc 1:1 ${LOAD_ADDR} ${P1_IMAGE};
    bootm ${LOAD_ADDR}
fi
